
```python
from {{{packageName}}} import OpenRemoteApiClient, {{{classname}}}
{{#vendorExtensions.x-py-example-import}}
{{{.}}}
{{/vendorExtensions.x-py-example-import}}
from {{{packageName}}}.rest import ApiException
from pprint import pprint

# Create the OpenRemote Client
client = OpenRemoteApiClient(
    base_url="http://localhost:8080/api/master",
    keycloak_url="http://localhost:8081/auth",
    client_id="serviceuser",
    client_secret="your_secret",
    realm="master"
)

# Create an instance of the API class
api_instance = {{{classname}}}(client)
{{#allParams}}
{{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
{{/allParams}}

try:
    {{#summary}}
    # {{{.}}}
    {{/summary}}
    {{#returnType}}api_response = {{/returnType}}{{#asyncio}}await {{/asyncio}}api_instance.{{{operationId}}}({{#allParams}}{{#required}}{{paramName}}{{/required}}{{^required}}{{paramName}}={{paramName}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}})
    {{#returnType}}
    print("The response of {{classname}}->{{operationId}}:\n")
    pprint(api_response)
    {{/returnType}}
except Exception as e:
    print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
```

{{#vendorExtensions.x-py-postponed-example-imports.size}}
{{#vendorExtensions.x-py-postponed-example-imports}}
{{{.}}}
{{/vendorExtensions.x-py-postponed-example-imports}}
{{classname}}.update_forward_refs()
{{/vendorExtensions.x-py-postponed-example-imports.size}}

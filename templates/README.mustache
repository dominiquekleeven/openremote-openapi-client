# {{{projectName}}}

{{#appDescriptionWithNewLines}}
{{{.}}}
{{/appDescriptionWithNewLines}}

A Python client library for the OpenRemote Manager REST API with built-in Keycloak authentication.

## Features

- **Auto-generated** from OpenAPI specification using OpenAPI Generator
- **Built-in Keycloak OAuth2** authentication, we provide a helper class that automatically handles the OAuth2 flow for you.
- **Comprehensive** coverage of all OpenRemote Manager API endpoints

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: {{appVersion}}
- Package version: {{packageVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Generator version: {{generatorVersion}}
- Build package: {{generatorClass}}
{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Installation

```bash
pip install {{{packageName}}}
```

Or with uv:

```bash
uv add {{{packageName}}}
```

## Quick Start

```python
from {{{packageName}}} import AuthenticatedApiClient, StatusApi, AssetApi, AssetQuery

# Create authenticated client
client = AuthenticatedApiClient(
    base_url="http://localhost:8080/api/master",
    keycloak_url="http://localhost:8081/auth",
    client_id="serviceuser",
    client_secret="your_secret",
    realm="master"
)

# Health check
status_api = StatusApi(client)
health = status_api.get_health_status()
print(f"System health: {health}")

# Query assets
asset_api = AssetApi(client)
assets = asset_api.query_assets(asset_query=AssetQuery(limit=10))
print(f"Found {len(assets)} assets")
```

{{> common_README }}

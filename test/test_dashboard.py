# coding: utf-8

"""
    OpenRemote Manager REST API

    This is the documentation for the OpenRemote Manager HTTP REST API.  Please see the [documentation](https://docs.openremote.io) for more info.

    The version of the OpenAPI document: 3.0.0
    Contact: info@openremote.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501



import unittest

from or_rest_client.models.dashboard import Dashboard

class TestDashboard(unittest.TestCase):
    """Dashboard unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dashboard:
        """Test Dashboard
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dashboard`
        """
        model = Dashboard()
        if include_optional:
            return Dashboard(
                id = '',
                created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                realm = '0',
                version = 56,
                owner_id = '',
                access = 'PUBLIC',
                display_name = '0',
                template = or_rest_client.models.dashboard_template.DashboardTemplate(
                    id = '', 
                    columns = 1, 
                    max_screen_width = 1, 
                    refresh_interval = 'OFF', 
                    screen_presets = [
                        or_rest_client.models.dashboard_screen_preset.DashboardScreenPreset(
                            id = '', 
                            display_name = '0', 
                            breakpoint = 1, 
                            scaling_preset = 'WRAP_TO_SINGLE_COLUMN', 
                            redirect_dashboard_id = '', )
                        ], 
                    widgets = [
                        or_rest_client.models.dashboard_widget.DashboardWidget(
                            id = '', 
                            display_name = '', 
                            grid_item = or_rest_client.models.dashboard_grid_item.DashboardGridItem(
                                id = '', 
                                x = 56, 
                                y = 56, 
                                w = 1, 
                                h = 1, 
                                min_h = 56, 
                                min_w = 56, 
                                min_pixel_h = 56, 
                                min_pixel_w = 56, 
                                no_resize = True, 
                                no_move = True, 
                                locked = True, ), 
                            widget_type_id = '', 
                            widget_config = or_rest_client.models.widget_config.widgetConfig(), )
                        ], )
            )
        else:
            return Dashboard(
                realm = '0',
                display_name = '0',
                template = or_rest_client.models.dashboard_template.DashboardTemplate(
                    id = '', 
                    columns = 1, 
                    max_screen_width = 1, 
                    refresh_interval = 'OFF', 
                    screen_presets = [
                        or_rest_client.models.dashboard_screen_preset.DashboardScreenPreset(
                            id = '', 
                            display_name = '0', 
                            breakpoint = 1, 
                            scaling_preset = 'WRAP_TO_SINGLE_COLUMN', 
                            redirect_dashboard_id = '', )
                        ], 
                    widgets = [
                        or_rest_client.models.dashboard_widget.DashboardWidget(
                            id = '', 
                            display_name = '', 
                            grid_item = or_rest_client.models.dashboard_grid_item.DashboardGridItem(
                                id = '', 
                                x = 56, 
                                y = 56, 
                                w = 1, 
                                h = 1, 
                                min_h = 56, 
                                min_w = 56, 
                                min_pixel_h = 56, 
                                min_pixel_w = 56, 
                                no_resize = True, 
                                no_move = True, 
                                locked = True, ), 
                            widget_type_id = '', 
                            widget_config = or_rest_client.models.widget_config.widgetConfig(), )
                        ], ),
        )
        """

    def testDashboard(self):
        """Test Dashboard"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

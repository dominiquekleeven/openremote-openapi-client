# coding: utf-8

"""
    OpenRemote Manager REST API

    This is the documentation for the OpenRemote Manager HTTP REST API.  Please see the [documentation](https://docs.openremote.io) for more info.

    The version of the OpenAPI document: 3.0.0
    Contact: info@openremote.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501



import unittest

from or_rest_client.models.manager_config import ManagerConfig

class TestManagerConfig(unittest.TestCase):
    """ManagerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagerConfig:
        """Test ManagerConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagerConfig`
        """
        model = ManagerConfig()
        if include_optional:
            return ManagerConfig(
                manager_url = '',
                keycloak_url = '',
                app_version = '',
                realm = '',
                client_id = '',
                auto_login = True,
                console_auto_enable = True,
                load_icons = True,
                polling_interval_millis = 56,
                load_translations = [
                    ''
                    ],
                load_descriptors = True,
                translations_load_path = '',
                skip_fallback_to_basic_auth = True,
                apply_config_to_admin = True,
                auth = 'KEYCLOAK',
                credentials = or_rest_client.models.username_password.UsernamePassword(
                    username = '', 
                    password = '', ),
                event_provider_type = 'WEBSOCKET',
                map_type = 'VECTOR',
                configure_translations_options = or_rest_client.models.configure_translations_options.configureTranslationsOptions(),
                basic_login_provider = or_rest_client.models.basic_login_provider.basicLoginProvider(),
                default_language = ''
            )
        else:
            return ManagerConfig(
        )
        """

    def testManagerConfig(self):
        """Test ManagerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

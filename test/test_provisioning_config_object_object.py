# coding: utf-8

"""
    OpenRemote Manager REST API

    This is the documentation for the OpenRemote Manager HTTP REST API.  Please see the [documentation](https://docs.openremote.io) for more info.

    The version of the OpenAPI document: 3.0.0
    Contact: info@openremote.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501



import unittest

from or_rest_client.models.provisioning_config_object_object import ProvisioningConfigObjectObject

class TestProvisioningConfigObjectObject(unittest.TestCase):
    """ProvisioningConfigObjectObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProvisioningConfigObjectObject:
        """Test ProvisioningConfigObjectObject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProvisioningConfigObjectObject`
        """
        model = ProvisioningConfigObjectObject()
        if include_optional:
            return ProvisioningConfigObjectObject(
                id = 1,
                created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '0',
                type = '012',
                realm = '',
                asset_template = '',
                restricted_user = True,
                user_roles = [
                    'read:admin'
                    ],
                disabled = True,
                data = None
            )
        else:
            return ProvisioningConfigObjectObject(
                name = '0',
        )
        """

    def testProvisioningConfigObjectObject(self):
        """Test ProvisioningConfigObjectObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

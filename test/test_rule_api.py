# coding: utf-8

"""
    OpenRemote Manager REST API

    This is the documentation for the OpenRemote Manager HTTP REST API.  Please see the [documentation](https://docs.openremote.io) for more info.

    The version of the OpenAPI document: 3.0.0
    Contact: info@openremote.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501



import unittest

from or_rest_client.api.rule_api import RuleApi


class TestRuleApi(unittest.TestCase):
    """RuleApi unit test stubs"""

    def setUp(self) -> None:
        self.api = RuleApi()

    def tearDown(self) -> None:
        pass

    def test_create_asset_ruleset(self) -> None:
        """Test case for create_asset_ruleset

        Create an asset ruleset
        """
        pass

    def test_create_global_ruleset(self) -> None:
        """Test case for create_global_ruleset

        Create a global ruleset
        """
        pass

    def test_create_realm_ruleset(self) -> None:
        """Test case for create_realm_ruleset

        Create a realm ruleset
        """
        pass

    def test_delete_asset_ruleset(self) -> None:
        """Test case for delete_asset_ruleset

        Delete an asset ruleset
        """
        pass

    def test_delete_global_ruleset(self) -> None:
        """Test case for delete_global_ruleset

        Delete a global ruleset
        """
        pass

    def test_delete_realm_ruleset(self) -> None:
        """Test case for delete_realm_ruleset

        Delete a realm ruleset
        """
        pass

    def test_get_asset_engine_info(self) -> None:
        """Test case for get_asset_engine_info

        Retrieve information about an asset rules engine
        """
        pass

    def test_get_asset_geofences(self) -> None:
        """Test case for get_asset_geofences

        Get the geofences of an asset
        """
        pass

    def test_get_asset_ruleset(self) -> None:
        """Test case for get_asset_ruleset

        Retrieve an asset ruleset
        """
        pass

    def test_get_asset_rulesets(self) -> None:
        """Test case for get_asset_rulesets

        Retrieve the rules of an asset
        """
        pass

    def test_get_global_engine_info(self) -> None:
        """Test case for get_global_engine_info

        Retrieve information about the global rules engine
        """
        pass

    def test_get_global_ruleset(self) -> None:
        """Test case for get_global_ruleset

        Retrieve a global ruleset
        """
        pass

    def test_get_global_rulesets(self) -> None:
        """Test case for get_global_rulesets

         Retrieve the global rules
        """
        pass

    def test_get_realm_engine_info(self) -> None:
        """Test case for get_realm_engine_info

        Retrieve information about a realm rules engine
        """
        pass

    def test_get_realm_ruleset(self) -> None:
        """Test case for get_realm_ruleset

        Retrieve a realm ruleset
        """
        pass

    def test_get_realm_rulesets(self) -> None:
        """Test case for get_realm_rulesets

        Retrieve the rules of a realm
        """
        pass

    def test_update_asset_ruleset(self) -> None:
        """Test case for update_asset_ruleset

        Update an asset ruleset
        """
        pass

    def test_update_global_ruleset(self) -> None:
        """Test case for update_global_ruleset

        Update a global ruleset
        """
        pass

    def test_update_realm_ruleset(self) -> None:
        """Test case for update_realm_ruleset

        Update a realm ruleset
        """
        pass


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    OpenRemote Manager REST API

    This is the documentation for the OpenRemote Manager HTTP REST API.  Please see the [documentation](https://docs.openremote.io) for more info.

    The version of the OpenAPI document: 3.0.0
    Contact: info@openremote.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501



import unittest

from or_rest_client.models.sent_alarm import SentAlarm

class TestSentAlarm(unittest.TestCase):
    """SentAlarm unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SentAlarm:
        """Test SentAlarm
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SentAlarm`
        """
        model = SentAlarm()
        if include_optional:
            return SentAlarm(
                id = 56,
                realm = '',
                title = '',
                content = '',
                severity = 'LOW',
                status = 'OPEN',
                source = 'MANUAL',
                source_id = '',
                source_username = '',
                created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                acknowledged_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                assignee_id = '',
                assignee_username = '',
                asset = [
                    or_rest_client.models.asset_object.AssetObject(
                        id = 'gCu2LC4aWwWL9Y864DZtaG', 
                        version = 0, 
                        created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        access_public_read = True, 
                        parent_id = 'gCu2LC4aWwWL9Y864DZtaG', 
                        realm = '0', 
                        path = [
                            ''
                            ], 
                        attributes = {
                            'key' : or_rest_client.models.attribute_object.AttributeObject(
                                type = or_rest_client.models.value_descriptor_object.ValueDescriptorObject(
                                    name = 'H', 
                                    constraints = [
                                        or_rest_client.models.value_constraint.ValueConstraint(
                                            message = '', 
                                            type = '', )
                                        ], 
                                    format = or_rest_client.models.value_format.ValueFormat(
                                        use_grouping = True, 
                                        minimum_integer_digits = 56, 
                                        minimum_fraction_digits = 56, 
                                        maximum_fraction_digits = 56, 
                                        minimum_significant_digits = 56, 
                                        maximum_significant_digits = 56, 
                                        as_boolean = True, 
                                        as_date = True, 
                                        as_slider = True, 
                                        resolution = 1.337, 
                                        date_style = 'numeric', 
                                        time_style = 'numeric', 
                                        day_period = 'numeric', 
                                        hour12 = True, 
                                        iso8601 = True, 
                                        weekday = 'numeric', 
                                        era = 'numeric', 
                                        year = 'numeric', 
                                        month = 'numeric', 
                                        week = 'numeric', 
                                        day = 'numeric', 
                                        hour = 'numeric', 
                                        minute = 'numeric', 
                                        second = 'numeric', 
                                        fractional_second_digits = 56, 
                                        time_zone_name = 'numeric', 
                                        moment_js_format = '', 
                                        as_number = True, 
                                        as_on_off = True, 
                                        as_pressed_released = True, 
                                        as_open_closed = True, 
                                        as_momentary = True, 
                                        multiline = True, ), 
                                    units = [
                                        ''
                                        ], 
                                    array_dimensions = 56, 
                                    meta_use_only = True, 
                                    json_type = '', ), 
                                value = or_rest_client.models.value.value(), 
                                name = 'H0', 
                                meta = {
                                    'key' : or_rest_client.models.meta_item_object.MetaItemObject(
                                        value = or_rest_client.models.value.value(), 
                                        name = 'H0', )
                                    }, 
                                timestamp = 56, )
                            }, )
                    ]
            )
        else:
            return SentAlarm(
                realm = '',
                severity = 'LOW',
                status = 'OPEN',
                source = 'MANUAL',
        )
        """

    def testSentAlarm(self):
        """Test SentAlarm"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
